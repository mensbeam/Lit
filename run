#!/usr/bin/env bash
cwd=$(pwd)
PATH="$cwd/node_modules/.bin:$PATH"

fail() {
    help
    exit 1
}

help() {
    printf "This script is used to build language grammars from Atom's various github
repositories. They must be built because Atom stupidly uses CoffeeScript's
pointless CSON format and therefore need to be converted to JSON to be usable.
To build these grammars the following packages must be installed on a unix-based
system:

    * bash >=5.0
    * bash-task-runner >=0.9.0
    * composer >=2.0.6
    * gnu awk >=5.1.0
    * gnu coreutils >=8.0
    * gnu parallel >=20180922
    * yarn >=1.22.10

Arch Linux:
\`\`\`
pacman -S composer parallel yarn
yarn global add bash-task-runner
\`\`\`

macOS:
\`\`\`
brew install bash composer coreutils gawk parallel yarn
echo \"/usr/local/bin/bash\" >> /etc/shells
chsh -s /usr/local/bin/bash
yarn global add bash-task-runner
\`\`\`

Building the grammars is then a matter of running the following commands from the project folder:

\`\`\`
./run init
./run build
\`\`\`
"
}

shopt -s globstar extglob || fail

awkcmd="awk"
if [ "$(uname)" == "Darwin" ]; then
    awkcmd="gawk"
fi

if (( $(which $awkcmd composer parallel yarn | wc -l) < 4 )); then fail; fi

# Include runner
source $HOME/.config/yarn/global/node_modules/bash-task-runner/src/runner.sh || fail
runner_default_task="build"

task_init() {
    yarn install
    mkdir -p "$cwd"/deps

    printf "css
html
javascript
php
shellscript
sql
typescript
xml" | parallel "git clone https://github.com/atom/language-{}.git \"$cwd\"/deps/{}"
}

task_build() {
    rm -rf "$cwd"/data/*

    # Convert from CSON to JSON AND rename the files to their scopes... all in parallel.
    ls -1 "$cwd"/deps/**/grammars/!(tree-sitter-*).cson | parallel "temp=\$(mktemp) &&
        csonc --output=\$temp {}
        mv \$temp \"$cwd\"/data/\$(grep -m1 scopeName \$temp |
        $awkcmd '{ match(\$0, /\s*:\s*\"(.+?)\"/, arr); if(arr[1] != \"\") print arr[1] }').json"
}